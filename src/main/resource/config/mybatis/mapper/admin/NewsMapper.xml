<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ischoolbar.programmer.dao.admin.NewsDao">
	<!-- 多表联合查询 -->
	<resultMap type="News" id="newsMap">
		<id column="n_id" property="id" />
		<result column="n_categoryId" property="categoryId" />
		<result column="n_title" property="title" />
		<result column="n_tags" property="tags" />
		<result column="n_photo" property="photo" />
		<result column="n_author" property="author" />
		<result column="n_content" property="content" />
		<result column="n_viewNumber" property="viewNumber" />
		<result column="n_viewNumber" property="viewNumber" />
		<result column="n_cover" property="cover" />
		<association property="newsCategory" javaType="NewsCategory">
			<id column="nc_id" property="id" />
			<result column="nc_name" property="name" />
			<result column="nc_sort" property="sort" />
		</association>
	</resultMap>
	
	
	<!-- 添加新闻 -->
	<insert id="add" parameterType="News">
		insert into news(id,categoryId,title,tags,photo,author,content,viewNumber,cover,createTime) values(null,#{categoryId},#{title},#{tags},#{photo},#{author},#{content},#{viewNumber},#{cover},#{createTime})
	</insert>
	<!-- 修改新闻 -->
	<update id="edit" parameterType="News">
		update news set categoryId = #{categoryId}, title = #{title},tags = #{tags},photo = #{photo},author = #{author},content = #{content},cover = #{cover} where id = #{id}
	</update>
	<!-- 删除新闻 -->
	<delete id="delete" parameterType="String">
		delete from news where id in(${value})
	</delete>
	<!-- 分页获取新闻列表 -->
	<select id="findList" parameterType="Map" resultMap="newsMap">
		select n.id as n_id,n.categoryId as n_categoryId,n.title as n_title,n.tags as n_tags,n.photo as n_photo,n.author as n_author,n.content as n_content,n.viewNumber as n_viewNumber,n.createTime as n_createTime,
		nc.id as nc_id,nc.name as nc_name,nc.sort as nc_sort 
		from news n,news_category nc where n.categoryId = nc.id  
		<if test="title != null">
			and n.title like '%${title}%' 
		</if>
		<if test="author != null">
			and n.author like '%${author}%' 
		</if>
		<if test="categoryId != null">
			and n.categoryId = #{categoryId}  
		</if>
		order by createTime desc 
		<if test="offset != null and pageSize != null">
			limit #{offset},#{pageSize}
		</if>
	</select>
	<!-- 获取单条新闻记录 -->
	<select id="find" parameterType="Long" resultMap="newsMap">
		select n.id as n_id,n.categoryId as n_categoryId,n.title as n_title,n.tags as n_tags,n.photo as n_photo,n.author as n_author,n.content as n_content,n.viewNumber as n_viewNumber,n.createTime as n_createTime,n.cover as n_cover,
		nc.id as nc_id,nc.name as nc_name,nc.sort as nc_sort 
		from news n,news_category nc where n.categoryId = nc.id and n.id = #{value}
	</select>
	<!-- 获取当前新闻的上一条-->
	<select id="findFront" parameterType="Long" resultMap="newsMap">
		select n.id as n_id,n.categoryId as n_categoryId,n.title as n_title,n.tags as n_tags,n.photo as n_photo,n.author as n_author,n.content as n_content,n.viewNumber as n_viewNumber,n.createTime as n_createTime,
		nc.id as nc_id,nc.name as nc_name,nc.sort as nc_sort
		from news n,news_category nc where n.categoryId = nc.id and n.id = (select max(n1.id) from news n1,news_category nc1 where n1.id&lt;#{id} and n1.categoryId=(select nc2.id from news n2,news_category nc2 where n2.categoryId = nc2.id and n2.id = #{id}))

	</select>
	<!-- 获取当前新闻的下一条-->
	<select id="findBack" parameterType="Long" resultMap="newsMap">
		select n.id as n_id,n.categoryId as n_categoryId,n.title as n_title,n.tags as n_tags,n.photo as n_photo,n.author as n_author,n.content as n_content,n.viewNumber as n_viewNumber,n.createTime as n_createTime,
		nc.id as nc_id,nc.name as nc_name,nc.sort as nc_sort
		from news n,news_category nc where n.categoryId = nc.id and n.id = (select min(n1.id) from news n1,news_category nc1 where n1.id&gt;#{id} and n1.categoryId=(select nc2.id from news n2,news_category nc2 where n2.categoryId = nc2.id and n2.id = #{id}))

	</select>
	<!-- 获取符合结果的总记录数 -->
	<select id="getTotal" parameterType="Map" resultType="Integer">
		select count(*) from news where 1 = 1 
		<if test="title != null">
			and title like '%${title}%' 
		</if>
		<if test="author != null">
			and author like '%${author}%' 
		</if>
		<if test="categoryId != null">
			and categoryId = #{categoryId}  
		</if>
	</select>
	<!-- 获取新闻的总记录数 -->
	<select id="getNewsTotal" parameterType="Map" resultType="Integer">
		select count(*) from news where 1 = 1
		<if test="title != null">
			and title like '%${title}%'
		</if>
		<if test="author != null">
			and author like '%${author}%'
		</if>

	</select>
	<!-- 按照浏览量获取前n条新闻 -->
	<select id="findLastViewNumberList" parameterType="Integer" resultType="News">
		select * from news order by viewNumber desc limit 0,#{value}
	</select>
	<!-- 获取封面前n条新闻 -->
	<select id="findLastCoverList" parameterType="Map" resultType="News">
		select * from news WHERE  cover = #{cover} order by createTime desc limit 0,#{num}
	</select>
	<!-- 修改新闻浏览数量 -->
	<update id="updateViewNumber" parameterType="Long">
		update news set viewNumber = viewNumber + 1 where id = #{id}
	</update>
</mapper>